// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:nurseproject_flutter/pages/AppHomePage/Home/ServiceObject/hospital_model_entity.dart';
import 'package:nurseproject_flutter/generated/json/hospital_model_entity_helper.dart';
import 'package:nurseproject_flutter/pages/AppHomePage/MyPersonal/RelatedObject_request/related_object_list_entity.dart';
import 'package:nurseproject_flutter/generated/json/related_object_list_entity_helper.dart';
import 'package:nurseproject_flutter/pages/AppHomePage/Home/ServiceObject/hospitai_xi_yi_model_entity.dart';
import 'package:nurseproject_flutter/generated/json/hospitai_xi_yi_model_entity_helper.dart';
import 'package:nurseproject_flutter/pages/AppHomePage/MyPersonal/Order/order_model_entity.dart';
import 'package:nurseproject_flutter/generated/json/order_model_entity_helper.dart';
import 'package:nurseproject_flutter/pages/AppHomePage/MyPersonal/Order/order_detail_entity.dart';
import 'package:nurseproject_flutter/generated/json/order_detail_entity_helper.dart';
import 'package:nurseproject_flutter/pages/AppHomePage/MyPersonal/Order/pay_model_entity.dart';
import 'package:nurseproject_flutter/generated/json/pay_model_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case HospitalModelEntity:
			return hospitalModelEntityFromJson(data as HospitalModelEntity, json) as T;			case HospitalModelList:
			return hospitalModelListFromJson(data as HospitalModelList, json) as T;			case RelatedObjectListEntity:
			return relatedObjectListEntityFromJson(data as RelatedObjectListEntity, json) as T;			case RelatedObjectListData:
			return relatedObjectListDataFromJson(data as RelatedObjectListData, json) as T;			case HospitaiXiYiModelEntity:
			return hospitaiXiYiModelEntityFromJson(data as HospitaiXiYiModelEntity, json) as T;			case OrderModelEntity:
			return orderModelEntityFromJson(data as OrderModelEntity, json) as T;			case OrderModelList:
			return orderModelListFromJson(data as OrderModelList, json) as T;			case OrderDetailEntity:
			return orderDetailEntityFromJson(data as OrderDetailEntity, json) as T;			case PayModelEntity:
			return payModelEntityFromJson(data as PayModelEntity, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {			case HospitalModelEntity:
			return hospitalModelEntityToJson(data as HospitalModelEntity);			case HospitalModelList:
			return hospitalModelListToJson(data as HospitalModelList);			case RelatedObjectListEntity:
			return relatedObjectListEntityToJson(data as RelatedObjectListEntity);			case RelatedObjectListData:
			return relatedObjectListDataToJson(data as RelatedObjectListData);			case HospitaiXiYiModelEntity:
			return hospitaiXiYiModelEntityToJson(data as HospitaiXiYiModelEntity);			case OrderModelEntity:
			return orderModelEntityToJson(data as OrderModelEntity);			case OrderModelList:
			return orderModelListToJson(data as OrderModelList);			case OrderDetailEntity:
			return orderDetailEntityToJson(data as OrderDetailEntity);			case PayModelEntity:
			return payModelEntityToJson(data as PayModelEntity);    }
    return data as T;
  }
  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {			case 'HospitalModelEntity':
			return HospitalModelEntity().fromJson(json);			case 'HospitalModelList':
			return HospitalModelList().fromJson(json);			case 'RelatedObjectListEntity':
			return RelatedObjectListEntity().fromJson(json);			case 'RelatedObjectListData':
			return RelatedObjectListData().fromJson(json);			case 'HospitaiXiYiModelEntity':
			return HospitaiXiYiModelEntity().fromJson(json);			case 'OrderModelEntity':
			return OrderModelEntity().fromJson(json);			case 'OrderModelList':
			return OrderModelList().fromJson(json);			case 'OrderDetailEntity':
			return OrderDetailEntity().fromJson(json);			case 'PayModelEntity':
			return PayModelEntity().fromJson(json);    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {			case 'HospitalModelEntity':
			return List<HospitalModelEntity>();			case 'HospitalModelList':
			return List<HospitalModelList>();			case 'RelatedObjectListEntity':
			return List<RelatedObjectListEntity>();			case 'RelatedObjectListData':
			return List<RelatedObjectListData>();			case 'HospitaiXiYiModelEntity':
			return List<HospitaiXiYiModelEntity>();			case 'OrderModelEntity':
			return List<OrderModelEntity>();			case 'OrderModelList':
			return List<OrderModelList>();			case 'OrderDetailEntity':
			return List<OrderDetailEntity>();			case 'PayModelEntity':
			return List<PayModelEntity>();    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}